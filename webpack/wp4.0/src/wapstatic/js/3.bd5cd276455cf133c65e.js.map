{"version":3,"sources":["webpack:///./node_modules/_cropperjs@1.4.1@cropperjs/dist/cropper.esm.js","webpack:///src/components/Myinfo/SimpleCropper.vue","webpack:///./src/components/Myinfo/SimpleCropper.vue?088c","webpack:///./src/components/Myinfo/SimpleCropper.vue","webpack:///src/components/Myinfo/Info.vue","webpack:///./src/components/Myinfo/Info.vue?e64f","webpack:///./src/components/Myinfo/Info.vue"],"names":["IN_BROWSER","window","WINDOW","CLASS_HIDDEN","NAMESPACE","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","toConsumableArray","arr","Array","isArray","arr2","from","cropper_esm_isNaN","Number","isNaN","isNumber","value","isUndefined","isObject","cropper_esm_hasOwnProperty","hasOwnProperty","isPlainObject","_constructor","call","e","isFunction","forEach","callback","keys","cropper_esm_assign","assign","_len","arguments","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_HYPHENATE","hyphenate","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","document","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","documentElement","clientLeft","top","pageYOffset","clientTop","cropper_esm_location","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","cropper_esm_isFinite","isFinite","getAdjustedSizes","_ref4","height","width","isValidNumber","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","getOrientation","arrayBuffer","dataView","DataView","orientation","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","maxWidth","Infinity","maxHeight","newCanvasLeft","newCanvasTop","minLeft","min","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getRotatedSizes","canvas","renderImage","limitCropBox","image","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","createElement","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","pointers","action","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","cropper_esm_change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","getMaxZoomRatio","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","getPointersCenter","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","source","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","getContext","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","concat","map","param","floor","getSourceCanvas","_getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","xhr","XMLHttpRequest","done","ontimeout","onabort","onerror","onload","response","open","responseType","withCredentials","send","mimeType","btoa","arrayBufferToDataURL","_parseOrientation","parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","abort","cropper_esm","SimpleCropper","_components$data$comp","components","flag","headerImage","picValue","panel","testUrl","photoImgFiles","isUploading","defineProperty_default","mt-button","mint_ui_common","mt-spinner","Toast","_self","file","files","dataTransfer","reader","FileReader","result","console","log","$options","showToast","readAsDataURL","getElementById","mouseWheelZoom","touchDragZoom","base64url","Image","canvascom","drawer","formData","FormData","append","$store","state","memberId","$ajax","post","webRoot","headers","Content-Type","transformRequest","then","res","success","photoSrc","getMemberInfo","catch","err","cropCancel","id","commit","addMemberInfo","$emit","msg","time","message","position","duration","Myinfo_SimpleCropper","_vm","_h","$createElement","_c","attrs","directives","rawName","expression","staticClass","_m","_v","on","click","alt","accept","capture","for","color","staticRenderFns","components_Myinfo_SimpleCropper","__webpack_require__","normalizeComponent","ssrContext","Info","sheetVisible","actions","method","sexLayer","sex","personalInfo","updateInfo","pickerVisible","memberInfo","birthday","startDate","endDate","picURL","uploadParam","fileType","uploadURL","$dataURL","userImg","comHeaderTitle","ComHeaderTitle","comFoot","ComFoot","mt-cell","mt-actionsheet","mt-datetime-picker","filters","computed","sexData","bornDate","created","mounted","updated","destroyed","changePhoto","changeName","$router","path","query","memberName","getChangeName","changeSex","changeData","$refs","picker","confirmDate","year","getFullYear","month","getMonth","date","getDate","loadImg","upload","uploadHandle","form","headImgUrl","fileId","updateInfoChild","datas","memberID","Myinfo_Info","titles","slot","!click","$event","title","is-link","closeOnClickModal","model","$$v","memberCode","_s","ref","year-format","month-format","date-format","confirm","cName","Info_Component","Info_normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/3.bd5cd276455cf133c65e.js","sourcesContent":["/*!\n * Cropper.js v1.4.1\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-07-15T09:55:31.170Z\n */\n\nvar IN_BROWSER = typeof window !== 'undefined';\nvar WINDOW = IN_BROWSER ? window : {};\nvar NAMESPACE = 'cropper';\n\n// Actions\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw';\n\n// Classes\nvar CLASS_CROP = NAMESPACE + '-crop';\nvar CLASS_DISABLED = NAMESPACE + '-disabled';\nvar CLASS_HIDDEN = NAMESPACE + '-hidden';\nvar CLASS_HIDE = NAMESPACE + '-hide';\nvar CLASS_INVISIBLE = NAMESPACE + '-invisible';\nvar CLASS_MODAL = NAMESPACE + '-modal';\nvar CLASS_MOVE = NAMESPACE + '-move';\n\n// Data keys\nvar DATA_ACTION = NAMESPACE + 'Action';\nvar DATA_PREVIEW = NAMESPACE + 'Preview';\n\n// Drag modes\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none';\n\n// Events\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_ZOOM = 'zoom';\n\n// RegExps\nvar REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0, // 0, 1, 2, 3\n\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP, // 'crop', 'move' or 'none'\n\n  // Define the initial aspect ratio of the crop box\n  initialAspectRatio: NaN,\n\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n\n  // An object with the previous cropping result data\n  data: null,\n\n  // A selector for adding extra containers to preview\n  preview: '',\n\n  // Re-render the cropper when resize the window\n  responsive: true,\n\n  // Restore the cropped area after resize the window\n  restore: true,\n\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n\n  // Show the black modal\n  modal: true,\n\n  // Show the dashed lines for guiding\n  guides: true,\n\n  // Show the center indicator for guiding\n  center: true,\n\n  // Show the white modal to highlight the crop box\n  highlight: true,\n\n  // Show the grid background\n  background: true,\n\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n\n  // Enable to move the image\n  movable: true,\n\n  // Enable to rotate the image\n  rotatable: true,\n\n  // Enable to scale the image\n  scalable: true,\n\n  // Enable to zoom the image\n  zoomable: true,\n\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n\n  // Enable to move the crop box\n  cropBoxMovable: true,\n\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/**\n * Check if the given value is not a number.\n */\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\nfunction isObject(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n\n\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\nfunction forEach(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        var length = data.length;\n\n        var i = void 0;\n\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\nvar assign = Object.assign || function assign(obj) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n};\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\n\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\nfunction setStyle(element, styles) {\n  var style = element.style;\n\n\n  forEach(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = className + ' ' + value;\n  }\n}\n\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  }\n\n  // IE10-11 doesn't support the second parameter of `classList.toggle`\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\n\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n\n/**\n * Transform the given string from camelCase to kebab-case\n * @param {string} value - The value to transform.\n * @returns {string} The transformed value.\n */\nfunction hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  }\n\n  if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute('data-' + hyphenate(name));\n}\n\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute('data-' + hyphenate(name), data);\n  }\n}\n\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (e) {\n      element[name] = undefined;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = undefined;\n    }\n  } else {\n    element.removeAttribute('data-' + hyphenate(name));\n  }\n}\n\nvar REGEXP_SPACES = /\\s\\s*/;\nvar onceSupported = function () {\n  var supported = false;\n\n  if (IN_BROWSER) {\n    var once = false;\n    var listener = function listener() {};\n    var options = Object.defineProperty({}, 'once', {\n      get: function get$$1() {\n        supported = true;\n        return once;\n      },\n\n\n      /**\n       * This setter can fix a `TypeError` in strict mode\n       * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n       * @param {boolean} value - The value to set\n       */\n      set: function set$$1(value) {\n        once = value;\n      }\n    });\n\n    WINDOW.addEventListener('test', listener, options);\n    WINDOW.removeEventListener('test', listener, options);\n  }\n\n  return supported;\n}();\n\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var handler = listener;\n\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (!onceSupported) {\n      var listeners = element.listeners;\n\n\n      if (listeners && listeners[event] && listeners[event][listener]) {\n        handler = listeners[event][listener];\n        delete listeners[event][listener];\n\n        if (Object.keys(listeners[event]).length === 0) {\n          delete listeners[event];\n        }\n\n        if (Object.keys(listeners).length === 0) {\n          delete element.listeners;\n        }\n      }\n    }\n\n    element.removeEventListener(event, handler, options);\n  });\n}\n\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nfunction addListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var _handler = listener;\n\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (options.once && !onceSupported) {\n      var _element$listeners = element.listeners,\n          listeners = _element$listeners === undefined ? {} : _element$listeners;\n\n\n      _handler = function handler() {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        delete listeners[event][listener];\n        element.removeEventListener(event, _handler, options);\n        listener.apply(element, args);\n      };\n\n      if (!listeners[event]) {\n        listeners[event] = {};\n      }\n\n      if (listeners[event][listener]) {\n        element.removeEventListener(event, listeners[event][listener], options);\n      }\n\n      listeners[event][listener] = _handler;\n      element.listeners = listeners;\n    }\n\n    element.addEventListener(event, _handler, options);\n  });\n}\n\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\nfunction dispatchEvent(element, type, data) {\n  var event = void 0;\n\n  // Event and CustomEvent on IE9-11 are global objects, not constructors\n  if (isFunction(Event) && isFunction(CustomEvent)) {\n    event = new CustomEvent(type, {\n      detail: data,\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n  }\n\n  return element.dispatchEvent(event);\n}\n\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\nfunction getOffset(element) {\n  var box = element.getBoundingClientRect();\n\n  return {\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n  };\n}\n\nvar location = WINDOW.location;\n\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\nfunction addTimestamp(url) {\n  var timestamp = 'timestamp=' + new Date().getTime();\n\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push('translateX(' + translateX + 'px)');\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push('translateY(' + translateY + 'px)');\n  }\n\n  // Rotate should come first before scale to match orientation transform\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push('rotate(' + rotate + 'deg)');\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push('scaleX(' + scaleX + ')');\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push('scaleY(' + scaleY + ')');\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = assign({}, pointers);\n  var ratios = [];\n\n  forEach(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n\n    forEach(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n\n      ratios.push(ratio);\n    });\n  });\n\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n\n  return ratios[0];\n}\n\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n\n  return endOnly ? end : assign({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n\n  forEach(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n\n  pageX /= count;\n  pageY /= count;\n\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n\n/**\n * Check if the given value is a finite number.\n */\nvar isFinite = Number.isFinite || WINDOW.isFinite;\n\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\nfunction getAdjustedSizes(_ref4) // or 'cover'\n{\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n\n  var isValidNumber = function isValidNumber(value) {\n    return isFinite(value) && value > 0;\n  };\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    var adjustedWidth = height * aspectRatio;\n\n    if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === undefined ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === undefined ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === undefined ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === undefined ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === undefined ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === undefined ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === undefined ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === undefined ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === undefined ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === undefined ? 0 : _ref8$minHeight;\n\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n\n  // Note: should always use image's natural sizes for drawing as\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n  var destMaxSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var destMinSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n  var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n  var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  forEach(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n\n  return arrayBuffer;\n}\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers as IE.\n  if (isFunction(uint8.forEach)) {\n    // Use native `forEach` method first for better performance\n    uint8.forEach(function (value) {\n      data += fromCharCode(value);\n    });\n  } else {\n    forEach(uint8, function (value) {\n      data += fromCharCode(value);\n    });\n  }\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          _offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(_offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n\n\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n\n    var containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n\n    this.containerData = containerData;\n\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n\n\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    this.initialImageData = assign({}, imageData);\n    this.initialCanvasData = assign({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getAdjustedSizes.width;\n      minCanvasHeight = _getAdjustedSizes.height;\n\n\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode > (cropped ? 0 : 1)) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n\n    this.limitCanvas(false, true);\n\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    setStyle(this.canvas, assign({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n\n    assign(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, assign({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(assign({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n\n    var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true);\n\n    // Initialize auto crop area\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    // The width/height of auto crop area must large than \"minWidth/Height\"\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    this.initialCropBoxData = assign({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n      var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height;\n\n      // The min/maxCropBoxWidth/Height must be less than container's width/height\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      }\n\n      // The minWidth/Height must be less than maxWidth/Height\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    this.limitCropBox(false, true);\n\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, assign({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.viewBoxImage = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview;\n\n    if (typeof preview === 'string') {\n      previews = this.element.ownerDocument.querySelectorAll(preview);\n    } else if (preview.querySelector) {\n      previews = [preview];\n    }\n\n    this.previews = previews;\n\n    forEach(previews, function (el) {\n      var img = document.createElement('img');\n\n      // Save the original size for recover\n      setData(el, DATA_PREVIEW, {\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n        html: el.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n\n      el.innerHTML = '';\n      el.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.viewBoxImage, assign({\n      width: width,\n      height: height\n    }, getTransforms(assign({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n\n      setStyle(element.getElementsByTagName('img')[0], assign({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(assign({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width;\n\n    // Resize when width changed or height changed\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      var canvasData = void 0;\n      var cropBoxData = void 0;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(forEach(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(e) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n\n    // Limit wheel speed to prevent zoom too fast (#21)\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n\n    var action = void 0;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      forEach(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    // This line is required for preventing page zooming in iOS browsers\n    e.preventDefault();\n\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(e) {\n    var action = this.action;\n\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n\n\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        assign(pointers[touch.identifier], getPointer(touch, true));\n      });\n    } else {\n      assign(pointers[e.pointerId || 0], getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n  cropEnd: function cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(e) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset = void 0;\n\n    // Locking aspect ratio in \"free mode\" by holding shift key\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n\n      // Resize crop box\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += cropBoxData.width - width;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      // Move canvas\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n\n      // Zoom canvas\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n\n      // Create crop box\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        }\n\n        // Show the crop box if is hidden\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    }\n\n    // Override\n    forEach(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.cropped && !this.disabled) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n\n      removeClass(this.cropBox, CLASS_HIDDEN);\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n\n\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = assign({}, this.initialImageData);\n      this.canvasData = assign({}, this.initialCanvasData);\n      this.cropBoxData = assign({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n\n\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      assign(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true);\n\n      // Render canvas after crop box rendered\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n   * @returns {Cropper} this\n   */\n  replace: function replace(url) {\n    var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (hasSameSize) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.viewBoxImage.src = url;\n\n          forEach(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        this.options.data = null;\n        this.uncreate();\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n\n\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready && this.disabled) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready && !this.disabled) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Destroy the cropper and remove the instance from the image\n   * @returns {Cropper} this\n   */\n  destroy: function destroy() {\n    var element = this.element;\n\n\n    if (!getData(element, NAMESPACE)) {\n      return this;\n    }\n\n    if (this.isImg && this.replaced) {\n      element.src = this.originalUrl;\n    }\n\n    this.uncreate();\n    removeData(element, NAMESPACE);\n\n    return this;\n  },\n\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n   * @returns {Cropper} this\n   */\n  move: function move(offsetX) {\n    var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n    var _canvasData = this.canvasData,\n        left = _canvasData.left,\n        top = _canvasData.top;\n\n\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Cropper} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n\n    var changed = false;\n\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n\n\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n\n\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        ratio: ratio,\n        oldRatio: width / naturalWidth,\n        originalEvent: _originalEvent\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        };\n\n        // Zoom from the triggering point of the event\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Cropper} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n\n\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n\n\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n\n    var transformed = false;\n\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData$$1() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n\n    var data = void 0;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      forEach(data, function (n, i) {\n        data[i] = n / ratio;\n      });\n\n      if (rounded) {\n        // In case rounding off leads to extra 1px in right or bottom border\n        // we should round the top-left corner and the dimension (#343).\n        var bottom = Math.round(data.y + data.height);\n        var right = Math.round(data.x + data.width);\n\n        data.x = Math.round(data.x);\n        data.y = Math.round(data.y);\n        data.width = right - data.x;\n        data.height = bottom - data.y;\n      }\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Cropper} this\n   */\n  setData: function setData$$1(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n\n    var cropBoxData = {};\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? assign({}, this.containerData) : {};\n  },\n\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.sized ? assign({}, this.imageData) : {};\n  },\n\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n\n    var data = {};\n\n    if (this.ready) {\n      forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Cropper} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n\n    var data = void 0;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Cropper} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n\n    var widthChanged = void 0;\n    var heightChanged = void 0;\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n    // Returns the source canvas if it is not cropped.\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _getData = this.getData(),\n        initialX = _getData.x,\n        initialY = _getData.y,\n        initialWidth = _getData.width,\n        initialHeight = _getData.height;\n\n    var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n    if (ratio !== 1) {\n      initialX *= ratio;\n      initialY *= ratio;\n      initialWidth *= ratio;\n      initialHeight *= ratio;\n    }\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    }, 'cover');\n\n    var _getAdjustedSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\n      height: options.height || (ratio !== 1 ? source.height : initialHeight)\n    }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === undefined ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n\n\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n    var sourceWidth = source.width;\n    var sourceHeight = source.height;\n\n    // Source canvas parameters\n    var srcX = initialX;\n    var srcY = initialY;\n    var srcWidth = void 0;\n    var srcHeight = void 0;\n\n    // Destination canvas parameters\n    var dstX = void 0;\n    var dstY = void 0;\n    var dstWidth = void 0;\n    var dstHeight = void 0;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    var params = [srcX, srcY, srcWidth, srcHeight];\n\n    // Avoid \"IndexSizeError\"\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    }\n\n    // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n    context.drawImage.apply(context, [source].concat(toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n\n    return canvas;\n  },\n\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Cropper} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Cropper} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n\n    if (this.ready && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n\n      options.dragMode = mode;\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper = function () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n    this.cropped = false;\n    this.disabled = false;\n    this.pointers = {};\n    this.ready = false;\n    this.reloading = false;\n    this.replaced = false;\n    this.sized = false;\n    this.sizing = false;\n    this.init();\n  }\n\n  createClass(Cropper, [{\n    key: 'init',\n    value: function init() {\n      var element = this.element;\n\n      var tagName = element.tagName.toLowerCase();\n      var url = void 0;\n\n      if (getData(element, NAMESPACE)) {\n        return;\n      }\n\n      setData(element, NAMESPACE, this);\n\n      if (tagName === 'img') {\n        this.isImg = true;\n\n        // e.g.: \"img/picture.jpg\"\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url;\n\n        // Stop when it's a blank image\n        if (!url) {\n          return;\n        }\n\n        // e.g.: \"http://example.com/img/picture.jpg\"\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: 'load',\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n\n      var element = this.element,\n          options = this.options;\n\n\n      if (!options.rotatable && !options.scalable) {\n        options.checkOrientation = false;\n      }\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      }\n\n      // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          this.clone();\n        }\n\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      this.reloading = true;\n      this.xhr = xhr;\n\n      var done = function done() {\n        _this.reloading = false;\n        _this.xhr = null;\n      };\n\n      xhr.ontimeout = done;\n      xhr.onabort = done;\n      xhr.onerror = function () {\n        done();\n        _this.clone();\n      };\n\n      xhr.onload = function () {\n        done();\n        _this.read(xhr.response);\n      };\n\n      // Bust cache when there is a \"crossOrigin\" property\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('get', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: 'read',\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData;\n\n      var orientation = getOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        this.url = arrayBufferToDataURL(arrayBuffer, 'image/jpeg');\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n\n      var crossOrigin = void 0;\n      var crossOriginUrl = void 0;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous';\n\n          // Bust cache when there is not a \"crossOrigin\" property\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n      this.image = image;\n      image.onload = this.start.bind(this);\n      image.onerror = this.stop.bind(this);\n      addClass(image, CLASS_HIDE);\n      element.parentNode.insertBefore(image, element.nextSibling);\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      var image = this.isImg ? this.element : this.image;\n\n      image.onload = null;\n      image.onerror = null;\n      this.sizing = true;\n\n      var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\n      var done = function done(naturalWidth, naturalHeight) {\n        assign(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.sizing = false;\n        _this2.sized = true;\n        _this2.build();\n      };\n\n      // Modern browsers (except Safari)\n      if (image.naturalWidth && !IS_SAFARI) {\n        done(image.naturalWidth, image.naturalHeight);\n        return;\n      }\n\n      var sizingImage = document.createElement('img');\n      var body = document.body || document.documentElement;\n\n      this.sizingImage = sizingImage;\n\n      sizingImage.onload = function () {\n        done(sizingImage.width, sizingImage.height);\n\n        if (!IS_SAFARI) {\n          body.removeChild(sizingImage);\n        }\n      };\n\n      sizingImage.src = image.src;\n\n      // iOS Safari will convert the image automatically\n      // with its orientation once append it into DOM (#279)\n      if (!IS_SAFARI) {\n        sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n        body.appendChild(sizingImage);\n      }\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var image = this.image;\n\n\n      image.onload = null;\n      image.onerror = null;\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: 'build',\n    value: function build() {\n      if (!this.sized || this.ready) {\n        return;\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image;\n\n      // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n\n      template.innerHTML = TEMPLATE;\n\n      var cropper = template.querySelector('.' + NAMESPACE + '-container');\n      var canvas = cropper.querySelector('.' + NAMESPACE + '-canvas');\n      var dragBox = cropper.querySelector('.' + NAMESPACE + '-drag-box');\n      var cropBox = cropper.querySelector('.' + NAMESPACE + '-crop-box');\n      var face = cropBox.querySelector('.' + NAMESPACE + '-face');\n\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector('.' + NAMESPACE + '-view-box');\n      this.face = face;\n\n      canvas.appendChild(image);\n\n      // Hide the original image\n      addClass(element, CLASS_HIDDEN);\n\n      // Inserts the cropper after to the current image\n      container.insertBefore(cropper, element.nextSibling);\n\n      // Show the image if is hidden\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n\n      options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\n      addClass(cropBox, CLASS_HIDDEN);\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-dashed'), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-center'), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, NAMESPACE + '-bg');\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-line'), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-point'), CLASS_HIDDEN);\n      }\n\n      this.render();\n      this.ready = true;\n      this.setDragMode(options.dragMode);\n\n      if (options.autoCrop) {\n        this.crop();\n      }\n\n      this.setData(options.data);\n\n      if (isFunction(options.ready)) {\n        addListener(element, EVENT_READY, options.ready, {\n          once: true\n        });\n      }\n\n      dispatchEvent(element, EVENT_READY);\n    }\n  }, {\n    key: 'unbuild',\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      this.ready = false;\n      this.unbind();\n      this.resetPreview();\n      this.cropper.parentNode.removeChild(this.cropper);\n      removeClass(this.element, CLASS_HIDDEN);\n    }\n  }, {\n    key: 'uncreate',\n    value: function uncreate() {\n      if (this.ready) {\n        this.unbuild();\n        this.ready = false;\n        this.cropped = false;\n      } else if (this.sizing) {\n        this.sizingImage.onload = null;\n        this.sizing = false;\n        this.sized = false;\n      } else if (this.reloading) {\n        this.xhr.abort();\n      } else if (this.image) {\n        this.stop();\n      }\n    }\n\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: 'noConflict',\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: 'setDefaults',\n    value: function setDefaults(options) {\n      assign(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n  return Cropper;\n}();\n\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_cropperjs@1.4.1@cropperjs/dist/cropper.esm.js\n// module id = null\n// module chunks = ","<template>\r\n  <div id=\"layer\">  \r\n    <!-- 遮罩层 -->  \r\n    <div class=\"container\" v-show=\"panel\">  \r\n      <div class=\"pic_con\">  \r\n        <!-- 选择图片后存放地方 没有显示出来 -->\r\n        <img id=\"image\" src=\"\" alt=\"Picture\">  \r\n      </div>\r\n      <div class=\"btns d_flex\">\r\n        <!-- <button type=\"button\" class=\"btn_cancel\" @click=\"crop\">取消</button>\r\n        <button type=\"button\" class=\"btn_comfire\" @click=\"crop\">确定</button> -->\r\n        <button type=\"button\" class=\"btn_cancel\" @click=\"cropCancel\">取消</button>\r\n        <button type=\"button\" class=\"btn_comfire\" @click=\"crop\">确定</button>\r\n      </div>\r\n    </div>  \r\n    \r\n    <!-- 裁剪后得到的图片 -->\r\n    <img :src=\"testUrl\" id=\"cur_pic\" v-show=\"false\" alt=\"\">\r\n\r\n    <div class=\"origin_input\">  \r\n        <!-- <div class=\"show\">  \r\n          <div class=\"picture\" :style=\"'backgroundImage:url('+headerImage+')'\">  \r\n          </div>  \r\n        </div> -->\r\n\r\n        <div>  \r\n          <!-- 点击选择图片 -->\r\n          <!-- <input type=\"file\" id=\"change\" accept=\"image\" @change=\"change\">  -->\r\n          <!-- 拍照上传 -->\r\n          <input v-show=\"false\" id=\"photoImg\" type=\"file\" accept=\"image/*\" capture=\"camera\" @change=\"change\" >\r\n          <!-- 拍照上传 end -->\r\n          <!-- 从相册选择 -->\r\n          <input v-show=\"false\" id=\"gallery\" type=\"file\" accept=\"image/*\" @change=\"change\" >\r\n          <!-- 从相册选择 end --> \r\n\r\n          <label for=\"change\"></label>  \r\n        </div>  \r\n    </div>  \r\n    <!-- 上传中 -->\r\n    <mt-spinner color=\"rgb(255, 255, 255)\" v-show=\"isUploading\" class=\"uploading\" type=\"fading-circle\"></mt-spinner>\r\n    <!-- 上传中 end -->\r\n  </div> \r\n</template>\r\n\r\n  <script>\r\n    import Cropper from 'cropperjs';\r\n    import { Button, Toast, Spinner } from 'mint-ui';  \r\n    export default {  \r\n      components: {  \r\n\r\n      },  \r\n      data () {  \r\n        return {  \r\n          flag: false,\r\n          headerImage:'',  \r\n          picValue:'',  \r\n          cropper:'',  \r\n          croppable:false,  \r\n          panel:false,//是否显示裁剪区  \r\n          url:'' ,\r\n          testUrl: '', \r\n          photoImgFiles: '',//图片文件\r\n          isUploading: false,//是否在上传中\r\n        }  \r\n      }, \r\n      components: {\r\n        'mt-button': Button,\r\n        'mt-spinner': Spinner,\r\n        Toast,\r\n      },\r\n      mounted () {  \r\n        //初始化这个裁剪框  \r\n        var self = this;   \r\n      },  \r\n      methods: {  \r\n        change (e){\r\n          const _self = this;\r\n          var file = e.target.files[0] || e.dataTransfer.files;\r\n          var reader = new FileReader();\r\n          var result = '';\r\n\r\n          if( file.type !== \"image/jpeg\" ){\r\n            console.log('格式不对')\r\n            // 清空文件上传控件的值  不清理会出现选择同样的图片会无法触发input事件了\r\n            e.target.value = null;\r\n            _self.$options.methods.showToast('请上传jpg格式的图片！');\r\n            return\r\n          }\r\n          if (!file){\r\n              return;\r\n          }\r\n\r\n          reader.readAsDataURL(file);//转成base64\r\n          reader.onload = function() {\r\n            // img.src = this.result;\r\n            result = this.result; //获取转换后的结果\r\n            var image = document.getElementById('image');\r\n\r\n            // image.cropper('replace', result,false);\r\n            _self.cropper = new Cropper(image, {\r\n              aspectRatio: 1/1,//默认比例\r\n              // preview: '.previewImg',//预览视图\r\n              guides: false,  //裁剪框的虚线(九宫格)\r\n              autoCropArea: 1,  //0-1之间的数值，定义自动剪裁区域的大小，默认0.8\r\n              movable: true, //是否允许移动图片\r\n              // dragCrop: true,  //是否允许移除当前的剪裁框，并通过拖动来新建一个剪裁框区域\r\n              cropBoxMovable: true,  //是否允许移动剪裁框\r\n              cropBoxResizable: true,  //是否允许改变裁剪框的大小\r\n              zoomable: true,  //是否允许缩放图片大小\r\n              mouseWheelZoom: false,  //是否允许通过鼠标滚轮来缩放图片\r\n              touchDragZoom: true,  //是否允许通过触摸移动来缩放图片\r\n              rotatable: true,  //是否允许旋转图片\r\n              minContainerWidth: 300,\r\n              minContainerHeight: 300,\r\n              minCanvasWidth: 300,\r\n              minCanvasHeight: 300,\r\n              minCropBoxWidth: 300,\r\n              minCropBoxHeight: 300,\r\n              crop: function(){\r\n                console.log('crop')\r\n              },\r\n              ready: function () {\r\n                console.log('ready: ')\r\n              }\r\n            });\r\n\r\n            _self.cropper.replace(result,false);\r\n            _self.panel = true;//显示\r\n          }\r\n        }, \r\n        //确定\r\n        crop (){\r\n          if( this.flag ){return false}\r\n\r\n          const _self = this;\r\n          //获取裁剪后的画布图片\r\n          var croppedCanvas = this.cropper.getCroppedCanvas();\r\n          //转换为base64地址形式\r\n          var base64url = croppedCanvas.toDataURL('image/png'); \r\n          // console.log('dd: ', dd,base64url)\r\n          this.testUrl = base64url;\r\n          //压缩图片\r\n          var img = new Image,\r\n          width = 120, //image resize   压缩后的宽\r\n          quality = 0.7, //image quality  压缩质量\r\n          canvascom = document.createElement(\"canvas\"),\r\n          drawer = canvascom.getContext(\"2d\");\r\n          img.src = base64url;\r\n          // console.log()\r\n          // return\r\n          img.onload = function() {\r\n            canvascom.width = width;\r\n            canvascom.height = width * (img.height / img.width);\r\n\r\n            drawer.drawImage(img, 0, 0, canvascom.width, canvascom.height);\r\n            // var base64 = canvas.toDataURL(\"image/jpeg\", quality); // 这里就拿到了压缩后的base64图片\r\n\r\n            var base64 = canvascom.toDataURL(img, quality); // 这里就拿到了压缩后的base64图片\r\n            _self.photoImgFiles = base64.split(',')[1];//图片文件\r\n            \r\n            var formData = new FormData();\r\n            let config = {\r\n              headers: {\r\n                  'Content-Type': 'multipart/form-data'\r\n                },\r\n              transformRequest: [function (data) {\r\n                return data\r\n              }],\r\n            }\r\n            formData.append('memberID', _self.$store.state.memberId);\r\n            formData.append('file',_self.photoImgFiles);//图片\r\n\r\n            _self.isUploading = true;//上传中动画\r\n            _self.$ajax.post(_self.webRoot + '/updateByMemberId', formData, config)\r\n            .then(function(res){\r\n              // console.log('上传： ',res)\r\n              if( res.data.success ){\r\n                _self.photoSrc = base64;//图片地址\r\n                _self.$options.methods.showToast('上传成功');\r\n                // 更新个人信息\r\n                _self.$options.methods.getMemberInfo(_self);\r\n                _self.isUploading = false;\r\n              }else{\r\n                _self.$options.methods.showToast('上传失败');\r\n                _self.isUploading = false;\r\n              }\r\n              _self.cropper.destroy();\r\n              _self.panel = false;\r\n              _self.flag = false;\r\n            })\r\n            .catch(function(err){\r\n              console.log(err)\r\n              _self.panel = false;\r\n              _self.flag = false;\r\n            });\r\n          }\r\n        },\r\n        //取消\r\n        cropCancel (){\r\n          this.panel = false;\r\n        },\r\n\r\n        //公共函数\r\n        //会员查询 \r\n        getMemberInfo ( _self ){\r\n          _self.$ajax({\r\n            url: _self.webRoot + '/vipSearchByID',\r\n            data: {\r\n              id: _self.$store.state.memberId,\r\n            }\r\n          })\r\n          .then(function(res){\r\n            // console.log('更新个人信息：', res)\r\n            if( !res.data ){\r\n              console.log('获取个人信息失败')\r\n            }\r\n            // 更新个人信息\r\n            _self.$store.commit('add', {\r\n              addMemberInfo: res.data\r\n            });\r\n            _self.$emit('updateInfo',res.data);\r\n          })\r\n          .catch(function(err){\r\n            console.log(err)\r\n          });\r\n        },\r\n        //显示提示信息\r\n        showToast( msg, time ){\r\n          var time = time ? time : 2000;\r\n\r\n          Toast({\r\n            message: msg,\r\n            position: 'center',\r\n            duration: time\r\n          });     \r\n        },\r\n      }  \r\n    }\r\n  </script>\r\n\r\n<style>\r\n  @import 'cropperjs/dist/cropper.min.css';\r\n  #layer .uploading>div {\r\n    margin:0 auto;\r\n  }\r\n</style>\r\n\r\n<style scoped>\r\n    @import './Css/simple_cropper.css'\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Myinfo/SimpleCropper.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"layer\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.panel),expression:\"panel\"}],staticClass:\"container\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"btns d_flex\"},[_c('button',{staticClass:\"btn_cancel\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.cropCancel}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('button',{staticClass:\"btn_comfire\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.crop}},[_vm._v(\"确定\")])])]),_vm._v(\" \"),_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],attrs:{\"src\":_vm.testUrl,\"id\":\"cur_pic\",\"alt\":\"\"}}),_vm._v(\" \"),_c('div',{staticClass:\"origin_input\"},[_c('div',[_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],attrs:{\"id\":\"photoImg\",\"type\":\"file\",\"accept\":\"image/*\",\"capture\":\"camera\"},on:{\"change\":_vm.change}}),_vm._v(\" \"),_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],attrs:{\"id\":\"gallery\",\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":_vm.change}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"change\"}})])]),_vm._v(\" \"),_c('mt-spinner',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isUploading),expression:\"isUploading\"}],staticClass:\"uploading\",attrs:{\"color\":\"rgb(255, 255, 255)\",\"type\":\"fading-circle\"}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"pic_con\"},[_c('img',{attrs:{\"id\":\"image\",\"src\":\"\",\"alt\":\"Picture\"}})])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-759c3cca\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/Myinfo/SimpleCropper.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-759c3cca\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=0!./SimpleCropper.vue\")\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-759c3cca\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=1!./SimpleCropper.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./SimpleCropper.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./SimpleCropper.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-759c3cca\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./SimpleCropper.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-759c3cca\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Myinfo/SimpleCropper.vue\n// module id = null\n// module chunks = ","<template>\t\r\n<section class=\"wrap has_header_wrap c_wrap\">\r\n\t<!-- 头部标题 -->\r\n\t<com-header titles=\"个人信息\">\r\n\t\t<template  slot=\"style-def\"></template>\r\n\t</com-header>\r\n\t<!-- 头部标题 end -->\r\n\t\r\n\t<div class=\"personal_con\">\r\n\t\t<!-- 头像 -->\r\n\t\t<div class=\"photo_block\" @click.capture=\"changePhoto\">\r\n\t\t<!-- <div class=\"photo_block\"> -->\r\n\t\t\t<mt-cell class=\"photo\" title=\"头像\" is-link>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<!-- <img v-if=\"!personalInfo.picURL\" src=\"../../../static/images/ak.png\"alt=\"\"> -->\r\n\t\t\t\t\t<img v-lazy=\"photoSrc\" >\r\n\t\t\t\t</span>\r\n\t\t\t\t<mt-actionsheet\r\n\t\t\t\t  :actions=\"actions\"\r\n\t\t\t\t  v-model=\"sheetVisible\"\r\n\t\t\t\t  closeOnClickModal='false'>\r\n\t\t\t\t</mt-actionsheet>\r\n\t\t\t</mt-cell>\r\n\t\t</div>\r\n\t\t<!-- 头像 end -->\r\n\r\n\t\t<!-- 账号 -->\r\n\t\t<mt-cell title=\"账号\" :value=\"personalInfo.memberCode\" is-link></mt-cell>\r\n\t\t<!-- 账号 end -->\r\n\r\n\t\t<!-- 昵称 -->\r\n\t\t<div @click=\"changeName\">\r\n\t\t\t<mt-cell title=\"昵称\" :value=\"personalInfo.memberName\" is-link></mt-cell>\r\n\t\t</div>\r\n\t\t<!-- 昵称 end -->\r\n\r\n\t\t<!-- 性别 -->\r\n\t\t<div @click.capture=\"changeSex\">\r\n\t\t\t<mt-cell title=\"性别\" :value=\"personalInfo.sex\" is-link>\r\n\t\t\t\t<span>{{ sexData }}</span>\r\n\t\t\t\t<mt-actionsheet\r\n\t\t\t\t  :actions=\"sex\"\r\n\t\t\t\t  v-model=\"sexLayer\"\r\n\t\t\t\t  closeOnClickModal='false'>\r\n\t\t\t\t</mt-actionsheet>\r\n\t\t\t</mt-cell>\r\n\t\t</div>\r\n\t\t<!-- 性别 end -->\r\n\r\n\t\t<!-- 出生年月 -->\r\n\t\t<div class=\"bornBlock\" @click.capture=\"changeData\">\r\n\t\t\t<mt-cell title=\"出生年月\" :value=\"personalInfo.birthday\" is-link>\r\n\t\t\t  <span>{{ bornDate }}</span>\r\n\t\t\t  <mt-datetime-picker\r\n\t\t\t\t  v-model=\"pickerVisible\"\r\n\t\t\t\t  type=\"date\" \r\n\t\t\t\t  ref=\"picker\"\r\n\t\t\t\t  year-format=\"{value} 年\"\r\n\t\t\t\t  month-format=\"{value} 月\"\r\n\t\t\t\t  date-format=\"{value} 日\"\r\n\t\t\t\t  :startDate=\"startDate\"\r\n\t\t\t\t  :endDate=\"endDate\"\r\n\t\t\t\t  @confirm=\"confirmDate\">\r\n\t\t\t\t</mt-datetime-picker>\r\n\t\t\t</mt-cell>\r\n\t\t</div>\r\n\t\t<!-- 出生年月 end -->\r\n\t\t\r\n\t\t<!-- 头像测试 -->\r\n\t\t<!-- <simple-cropper :initParam=\"uploadParam\" :successCallback=\"uploadHandle\" ref=\"cropper\">  -->\r\n\t\t<simple-cropper v-on:updateInfo=\"updateInfoChild\" ref=\"cropper\">  \r\n\t\t\t<!-- <img :src=\"userImg\" @click=\"upload\">   -->\r\n\t\t</simple-cropper> \r\n\t\t<!-- 头像测试 end -->\r\n\r\n\r\n\t\t<!-- 拍照上传 -->\r\n\t\t<!-- <input v-show=\"false\" id=\"photoImg\" type=\"file\" accept=\"image/*\" capture=\"camera\" @change=\"changePhotoImg\" > -->\r\n\t\t<!-- 拍照上传 end -->\r\n\t\t<!-- 从相册选择 -->\r\n\t\t<!-- <input v-show=\"false\" id=\"gallery\" type=\"file\" accept=\"image/*\" @change=\"changePhotoImg\" > -->\r\n\t\t<!-- 从相册选择 end -->\r\n\t</div>\t\t\r\n      \r\n  \t<!-- 底部 -->\r\n  \t<com-foot></com-foot>\r\n  \t<!-- 底部 end -->\r\n\r\n\t<!-- 子页面 -->\r\n    <transition name=\"fade\">\r\n    \t<router-view v-on:cName=\"getChangeName\"></router-view>\r\n    </transition>\r\n    <!-- 子页面 end -->\r\n\r\n</section>\r\n</template>\r\n\r\n<script>\r\nimport comHeaderTitle from '@/components/Common/ComHeaderTitle';\r\nimport comFoot from '@/components/Common/ComFoot';\r\nimport { Cell, Actionsheet, DatetimePicker, Toast } from 'mint-ui';\r\nimport SimpleCropper from '@/components/Myinfo/SimpleCropper';\r\n\r\nexport default {\r\n\tname: 'info',\r\n\tdata (){\r\n\t\treturn {\r\n\t\t\tsheetVisible: false, //头像弹出层\r\n\t\t\tactions: [ // 头像弹出层\r\n\t\t\t\t{\r\n\t\t\t\t\tname: '拍照',\r\n\t\t\t\t\tmethod: () => {\r\n\t\t\t\t\t\t// console.log(document.getElementById('change'))\r\n\t\t\t\t\t\tvar ele = document.getElementById('photoImg');\r\n\r\n\t\t\t\t\t\tele.click();\r\n\t\t\t\t\t\t// this.$emit('loadImg');\r\n\t\t\t\t\t\t// var ele = document.getElementById('change');\r\n\t\t\t\t\t\t// ele.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: '从相册选择',\r\n\t\t\t\t\tmethod: function(){\r\n\t\t\t\t\t\t// console.log('从相册选择')\r\n\t\t\t\t\t\tvar ele = document.getElementById('gallery');\r\n\r\n\t\t\t\t\t\tele.click();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tsexLayer: false, // 性别弹出层\r\n\t\t\tsex: [ //性别弹出层\r\n\t\t\t\t{\r\n\t\t\t\t\tname: '男',\r\n\t\t\t\t\tmethod: () => {\r\n\t\t\t\t\t\tif( this.personalInfo.sex == '男' ){\r\n\t\t\t\t\t\t\treturn \r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.$options.methods.updateInfo( this, 'sex', '男' );\r\n\t\t\t\t\t\tthis.personalInfo.sex = '男';\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: '女',\r\n\t\t\t\t\tmethod: () => {\r\n\t\t\t\t\t\tif( this.personalInfo.sex == '女' ){\r\n\t\t\t\t\t\t\treturn \r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.$options.methods.updateInfo( this, 'sex', '女' );\r\n\t\t\t\t\t\tthis.personalInfo.sex = '女'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t// sexData: '请选择性别' , // 性别数据\r\n\t\t\tpickerVisible: this.$store.state.memberInfo.birthday?this.$store.state.memberInfo.birthday:'', // 默认日期\r\n\t\t\tstartDate: new Date('1970-01-01'), //日期的最小可选值\r\n\t\t\tendDate: new Date(), //日期的最大可选值\r\n\t\t\t// bornDate: '', //出生年月\r\n\t\t\tpersonalInfo: this.$store.state.memberInfo?this.$store.state.memberInfo:'',//会员信息\r\n\t\t\tphotoSrc: this.$store.state.memberInfo?this.$store.state.memberInfo.picURL:'',//头像地址\r\n\t\t\tphotoImgFiles: '',//头像文件\r\n\t\t\t//\r\n\t\t\tuploadParam: {  \r\n\t\t        fileType: 'recruit', // 其他上传参数  \r\n\t\t        uploadURL: this.$dataURL + 'uploadAction/qcloudImg', // 上传地址  \r\n\t\t        scale: 4  // 相对手机屏幕放大的倍数: 4倍  \r\n\t\t    },  \r\n\t\t    userImg: this.$dataURL + 'test.png'\r\n\t\t}\r\n\t},\r\n\tcomponents: {\r\n\t\tcomHeaderTitle, // 公共头部标题\r\n    \tcomFoot, // 公共底部\r\n\t\t'mt-cell': Cell,\r\n\t\t'mt-actionsheet': Actionsheet,\r\n\t\t'mt-datetime-picker': DatetimePicker,\r\n\t\tSimpleCropper  \r\n\t},\r\n\tfilters: {\r\n\t\t\r\n\t},\r\n\tcomputed: {\r\n\t\t// 性别数据\r\n\t\tsexData (){\r\n\t\t\tif( this.personalInfo.sex ){\r\n\t\t\t\treturn this.personalInfo.sex;\r\n\t\t\t}else{\r\n\t\t\t\treturn '请选择性别';\r\n\t\t\t}\r\n\t\t} , \r\n\t\t//出生年月\r\n\t\tbornDate (){\r\n\t\t\tif( this.personalInfo.birthday ){\r\n\t\t\t\treturn this.personalInfo.birthday;\r\n\t\t\t}else{\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t}, \r\n\t},\r\n\tcreated (){\r\n\t\tconst _self = this;\r\n\t},\r\n\tmounted (){\r\n\t\tthis.$emit('changeClass',false);\r\n\t\t// document.getElementById( 'loadImg').addEventListener( 'change', function () {\r\n\t\t//      var reader = new FileReader();\r\n\t\t//      reader.onload = function (e) {\r\n\t\t//           //调用图片压缩方法：compress();\r\n\t\t//      };\r\n\t\t//      // console.log(reader)\r\n\t\t//      reader.readAsDataURL(this.files[0]);\r\n\t\t//      console.log(this.files[0]);\r\n\t\t//      // var fileSize = Math.round( this.files[0].size/1024/1024) ; //以M为单位\r\n\t\t//      //this.files[0] 该信息包含：图片的大小，以byte计算 获取size的方法如下：this.files[0].size;\r\n\t\t// }, false);\r\n\t\t// let URL = window.URL || window.webkitURL\r\n\t\t// console.log(URL);\r\n\t},\r\n\tupdated (){\r\n\t\t\r\n\t},\r\n\tdestroyed (){\r\n\t\tthis.$emit('changeClass',true);\r\n\t},\r\n\tmethods: {\r\n\t\t//拍照上传\r\n\t\t// changePhotoImg (e){\r\n\t\t// \tvar _self = this;\r\n\t\t// \tvar file = e.target.files[0] || e.dataTransfer.files;\r\n\t\t// \tvar reader = new FileReader();\r\n\t\t\t\r\n\t\t// \treader.readAsDataURL(file);//转成base64\r\n\t\t// \treader.onload = function() {\r\n\t //          img.src = this.result;\r\n\t //        }\r\n\t //        console.log(file)\r\n\t //        var img = new Image,\r\n\t\t\t\r\n\t\t// \twidth = 100, //image resize   压缩后的宽\r\n\t\t// \tquality = 0.7, //image quality  压缩质量\r\n\t\t// \tcanvas = document.createElement(\"canvas\"),\r\n\t\t// \tdrawer = canvas.getContext(\"2d\");\r\n\r\n\t\t// \timg.onload = function() {\r\n\t //          canvas.width = width;\r\n\t //          canvas.height = width * (img.height / img.width);\r\n\t //          console.log(canvas.width, canvas.height)\r\n\t          \r\n\t //          if( canvas.height < 100 ){\r\n\t //          \talert('高度太小')\r\n\t //          \te.target.value = null;\r\n\t //          \tfile = '';\r\n\t //          \treturn \r\n\t //          }\r\n\t //          drawer.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n\t //          // var base64 = canvas.toDataURL(\"image/jpeg\", quality); // 这里就拿到了压缩后的base64图片\r\n\r\n\t //          var base64 = canvas.toDataURL(file.type, quality); // 这里就拿到了压缩后的base64图片\r\n\t //          _self.photoImgFiles = base64.split(',')[1];//图片文件\r\n\t //          // console.log('base64：',_self.photoImgFiles)\r\n\t //          var formData = new FormData();\r\n\t\t// \t  let config = {\r\n\t\t// \t\theaders: {\r\n\t\t// \t\t    'Content-Type': 'multipart/form-data'\r\n\t\t// \t\t\t},\r\n\t\t// \t\ttransformRequest: [function (data) {\r\n\t\t// \t\t\treturn data\r\n\t\t// \t\t}],\r\n\t\t// \t   }\r\n\t\t// \t  formData.append('memberID', _self.$store.state.memberId);\r\n\t //          formData.append('file',_self.photoImgFiles);//图片\r\n\r\n\t //          _self.$ajax.post(_self.webRoot + '/updateByMemberId', formData, config)\r\n\t //          .then(function(res){\r\n\t //          \tconsole.log('上传： ',res)\r\n\t //          \tif( res.data.success ){\r\n\t //          \t\t_self.photoSrc = base64;//图片地址\r\n\t //          \t\t_self.$options.methods.showToast('上传成功');\r\n\t //          \t\t// 更新个人信息\r\n\t //  \t\t\t\t_self.$options.methods.getMemberInfo(_self);\r\n\t //  \t\t\t\tconsole.log('dd:',_self.$store.state.memberInfo)\r\n\t //          \t}else{\r\n\t //          \t\t_self.$options.methods.showToast('上传失败');\r\n\t //          \t}\r\n\t //          })\r\n\t //          .catch(function(err){\r\n\t //          \tconsole.log(err)\r\n\t //          });\r\n\t //          // 清空文件上传控件的值  不清理会出现选择同样的图片会无法触发input事件了\r\n\t //          e.target.value = null;\r\n\t //          // console.log(_self.photoImgFiles)\r\n\t //        }\r\n\r\n\r\n\t\t// },\r\n\t\t//改头像\r\n\t\tchangePhoto (){\r\n\t\t\tthis.sheetVisible = true;\r\n\t\t},\r\n\t\t//改名称\r\n\t\tchangeName (){\t\r\n\t\t\tthis.$router.push({ path: 'info/infoset', query: { name: this.personalInfo.memberName }});\r\n\t\t},\r\n\t\t//获取改变后的昵称\r\n\t\tgetChangeName (data){\r\n\t\t\t// console.log(data)\r\n\t\t\tthis.personalInfo.memberName = data;\r\n\t\t\t// this.$store.state.memberInfo\r\n\t\t},\r\n\t\t//改变性别\r\n\t\tchangeSex (){\r\n\t\t\tthis.sexLayer = true;\r\n\t\t},\r\n\t\t//改变时间\r\n\t\tchangeData (){\t\r\n\t\t\tthis.$refs.picker.open();\r\n\t\t},\r\n\t\t//确认日期\r\n\t\tconfirmDate (){\r\n\t\t\t// console.log(this.startDate.getFullYear())\r\n\t\t\tif( !this.pickerVisible ){\r\n\t\t\t\tvar year = this.startDate.getFullYear();\r\n\t\t\t\tvar month = this.startDate.getMonth()+1;\r\n\t\t\t\tif( month < 10 ){\r\n\t\t\t\t\tmonth = '0' + month;\r\n\t\t\t\t}\r\n\t\t\t\tvar date = this.startDate.getDate();\r\n\t\t\t\tif( date < 10 ){\r\n\t\t\t\t\tdate = '0' + date;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar bornDate = year + '-' + month + '-' + date;\r\n\t\t\t\tthis.$options.methods.updateInfo( this, 'birthday', bornDate );\r\n\t\t\t\tthis.personalInfo.birthday = bornDate;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tvar year = this.pickerVisible.getFullYear();\r\n\t\t\tvar month = this.pickerVisible.getMonth()+1;\r\n\t\t\tif( month < 10 ){\r\n\t\t\t\tmonth = '0' + month;\r\n\t\t\t}\r\n\t\t\tvar date = this.pickerVisible.getDate();\r\n\t\t\tif( date < 10 ){\r\n\t\t\t\tdate = '0' + date;\r\n\t\t\t}\r\n\r\n\t\t\tvar bornDate = year + '-' + month + '-' + date;\r\n\t\t\tthis.$options.methods.updateInfo( this, 'birthday', bornDate );\r\n\t\t\tthis.personalInfo.birthday = bornDate;\r\n\t\t},\r\n\t\t//\r\n\t\tloadImg (){\r\n\t\t\t// console.log(6565656)\r\n\t\t\t// var reader = new FileReader(), img = new Image();\r\n\t\t\t// // 读文件成功的回调\r\n\t\t\t// reader.onload = function(e) {\r\n\t\t\t//   // e.target.result就是图片的base64地址信息\r\n\t\t\t//   img.src = e.target.result;\r\n\t\t\t// };\r\n\t\t\t// console.log(img)\r\n\t\t},\r\n\t\t// 上传头像  \r\n\t    upload () {  \r\n\t      this.$refs['cropper'].upload()  \r\n\t    },  \r\n\t    // 上传头像成功回调  \r\n\t    uploadHandle (data) {  \r\n\t      if (data.state === 'SUCCESS') {  \r\n\t        this.userImg = this.form.headImgUrl = data.fileId  \r\n\t      }  \r\n\t    }, \r\n\t    //上传头像后更新图片\r\n\t    updateInfoChild ( data ){\r\n\t    \t// console.log('updateInfoChild: ',data)\r\n\t    \tthis.personalInfo = data;\r\n\t    \t//更新头像数据\r\n\t    \tthis.photoSrc = data.picURL;\r\n\t    \t// console.log('aa: ', data.picURL, this.photoSrc)\r\n\t    \t//更新个人信息头像\r\n\t    \tthis.$emit('updateInfo',data);\r\n\t    },\r\n\r\n\t\t//公共函数\r\n\t    //显示提示信息\r\n\t    showToast( msg, time ){\r\n\t      var time = time ? time : 2000;\r\n\r\n\t      Toast({\r\n\t        message: msg,\r\n\t        position: 'center',\r\n\t        duration: time\r\n\t      });     \r\n\t    },\r\n\t    //更新信息\r\n\t\tupdateInfo ( _self, key, data ){\r\n\t\t\tvar datas = {};\r\n\r\n\t\t\tdatas.memberID = _self.$store.state.memberId;\r\n\t\t\tdatas[key] = data;\r\n\r\n\t\t\t_self.$ajax({\r\n\t\t\t\turl: _self.webRoot + '/updateByMemberId',\r\n\t\t\t\tdata: datas, \r\n\t\t\t})\r\n\t\t\t.then(function(res){\r\n\t\t\t\tconsole.log('修改： ', res)\r\n\t\t\t\tif( !res.data.success ){\r\n\t\t\t\t\t_self.$options.methods.showToast( res.data.msg );\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t_self.$store.state.memberInfo[key] = data;\r\n\t\t\t\t// 更新个人信息\r\n  \t\t\t\t_self.$store.commit('add', {\r\n  \t\t\t\t\taddMemberInfo: _self.$store.state.memberInfo,\r\n  \t\t\t\t});\r\n\t\t\t\t_self.$options.methods.showToast( '修改成功!', 1000 );\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\t.catch(function(err){\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t},\r\n\t\t//会员查询 \r\n\t\tgetMemberInfo ( _self ){\r\n\t\t\t_self.$ajax({\r\n\t\t\t\turl: _self.webRoot + '/vipSearchByID',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tid: _self.$store.state.memberId,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(function(res){\r\n\t\t\t\t// console.log(res)\r\n\t\t\t\tif( !res.data ){\r\n\t\t\t\t\tconsole.log('获取个人信息失败')\r\n\t\t\t\t}\r\n\t\t\t\t// 更新个人信息\r\n  \t\t\t\t_self.$store.commit('add', {\r\n  \t\t\t\t\taddMemberInfo: res.data\r\n  \t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(function(err){\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n}\t\r\n</script>\r\n\r\n<style scoped>\r\n@import '../../../static/css/childre_wrap.css';\r\n@import './Css/c_style.css';\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Myinfo/Info.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"wrap has_header_wrap c_wrap\"},[_c('com-header',{attrs:{\"titles\":\"个人信息\"}},[_c('template',{slot:\"style-def\"})],2),_vm._v(\" \"),_c('div',{staticClass:\"personal_con\"},[_c('div',{staticClass:\"photo_block\",on:{\"!click\":function($event){return _vm.changePhoto($event)}}},[_c('mt-cell',{staticClass:\"photo\",attrs:{\"title\":\"头像\",\"is-link\":\"\"}},[_c('span',[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(_vm.photoSrc),expression:\"photoSrc\"}]})]),_vm._v(\" \"),_c('mt-actionsheet',{attrs:{\"actions\":_vm.actions,\"closeOnClickModal\":\"false\"},model:{value:(_vm.sheetVisible),callback:function ($$v) {_vm.sheetVisible=$$v},expression:\"sheetVisible\"}})],1)],1),_vm._v(\" \"),_c('mt-cell',{attrs:{\"title\":\"账号\",\"value\":_vm.personalInfo.memberCode,\"is-link\":\"\"}}),_vm._v(\" \"),_c('div',{on:{\"click\":_vm.changeName}},[_c('mt-cell',{attrs:{\"title\":\"昵称\",\"value\":_vm.personalInfo.memberName,\"is-link\":\"\"}})],1),_vm._v(\" \"),_c('div',{on:{\"!click\":function($event){return _vm.changeSex($event)}}},[_c('mt-cell',{attrs:{\"title\":\"性别\",\"value\":_vm.personalInfo.sex,\"is-link\":\"\"}},[_c('span',[_vm._v(_vm._s(_vm.sexData))]),_vm._v(\" \"),_c('mt-actionsheet',{attrs:{\"actions\":_vm.sex,\"closeOnClickModal\":\"false\"},model:{value:(_vm.sexLayer),callback:function ($$v) {_vm.sexLayer=$$v},expression:\"sexLayer\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"bornBlock\",on:{\"!click\":function($event){return _vm.changeData($event)}}},[_c('mt-cell',{attrs:{\"title\":\"出生年月\",\"value\":_vm.personalInfo.birthday,\"is-link\":\"\"}},[_c('span',[_vm._v(_vm._s(_vm.bornDate))]),_vm._v(\" \"),_c('mt-datetime-picker',{ref:\"picker\",attrs:{\"type\":\"date\",\"year-format\":\"{value} 年\",\"month-format\":\"{value} 月\",\"date-format\":\"{value} 日\",\"startDate\":_vm.startDate,\"endDate\":_vm.endDate},on:{\"confirm\":_vm.confirmDate},model:{value:(_vm.pickerVisible),callback:function ($$v) {_vm.pickerVisible=$$v},expression:\"pickerVisible\"}})],1)],1),_vm._v(\" \"),_c('simple-cropper',{ref:\"cropper\",on:{\"updateInfo\":_vm.updateInfoChild}})],1),_vm._v(\" \"),_c('com-foot'),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('router-view',{on:{\"cName\":_vm.getChangeName}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler?{\"id\":\"data-v-6be64e69\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.2@vue-loader/lib/selector.js?type=template&index=0!./src/components/Myinfo/Info.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6be64e69\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=styles&index=0!./Info.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./Info.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=script&index=0!./Info.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6be64e69\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/_vue-loader@13.7.2@vue-loader/lib/selector?type=template&index=0!./Info.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6be64e69\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Myinfo/Info.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}